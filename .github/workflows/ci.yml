name: CI
on:
  workflow_dispatch:
    inputs:
      runKics:
        description: Run KICS scan
        type: boolean
        default: true
      runLint:
        description: Run Ansible Lint
        type: boolean
        default: true
      runMolecule:
        description: Run Ansible Molecule
        type: boolean
        default: true
  push:
    paths-ignore:
      - README.md
    branches: ["master", "main"]
  pull_request:
    branches: ["master", "main"]

env:
  ACTIONS_REPOSITORY: "gha-templates"

# Declare default permissions as read only.
permissions: read-all

jobs:
  scan:
    name: Checkmarx KICS
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: |
      inputs.runKics == true ||
      github.event_name == 'push' ||
      github.event_name == 'pull_request' ||
      github.event_name == 'schedule'
    permissions:
      contents: read # for actions/checkout to fetch code
      issues: write # for checkmarx/kics-github-action to write feedback to github issues
      pull-requests: write # for checkmarx/kics-github-action to write feedback to PR
      security-events: write # for github/codeql-action/upload-sarif to upload report for CodeQL/Security Alerts
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@8ca2b8b2ece13480cda6dacd3511b49857a23c09 # v2.5.1
        with:
          disable-sudo: true
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0

      - name: Checkout actions repository
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0
        with:
          repository: ${{ github.repository_owner }}/${{ env.ACTIONS_REPOSITORY }}
          token: ${{ secrets.GITHUB_TOKEN }}
          path: gha_templates
          fetch-depth: 0

      - name: Run KICS scan
        uses: ./gha_templates/checkmarx-kics
        with:
          path: "tasks"

  lint:
    name: Ansible Lint
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: |
      inputs.runLint == true ||
      github.event_name == 'push' ||
      github.event_name == 'pull_request' ||
      github.event_name == 'schedule'
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@8ca2b8b2ece13480cda6dacd3511b49857a23c09 # v2.5.1
        with:
          disable-sudo: true
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0

      - name: Checkout actions repository
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0
        with:
          repository: ${{ github.repository_owner }}/${{ env.ACTIONS_REPOSITORY }}
          token: ${{ secrets.GITHUB_TOKEN }}
          path: gha_templates
          fetch-depth: 0

      - name: Run Ansible Lint
        uses: ./gha_templates/ansible-lint

  molecule:
    name: Ansible Molecule
    runs-on: ubuntu-latest
    timeout-minutes: 15
    if: |
      inputs.runMolecule == true ||
      github.event_name == 'push' ||
      github.event_name == 'pull_request' ||
      github.event_name == 'schedule'
    strategy:
      matrix:
        distro:
          - debian12

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@8ca2b8b2ece13480cda6dacd3511b49857a23c09 # v2.5.1
        with:
          disable-sudo: true
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0

      - name: Checkout actions repository
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0
        with:
          repository: ${{ github.repository_owner }}/${{ env.ACTIONS_REPOSITORY }}
          token: ${{ secrets.GITHUB_TOKEN }}
          path: gha_templates
          fetch-depth: 0

      - name: Run Ansible Molecule
        uses: ./gha_templates/ansible-molecule
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          role_name: ${{ github.event.repository.name }}
          distro: ${{ matrix.distro }}
